# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.domicilio import Domicilio  # noqa: F401,E501
from swagger_server.models.horario import Horario  # noqa: F401,E501
from swagger_server import util


class Sucursal(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, sucursal_id: int=None, aforo_actual: float=None, aforo_total: float=None, servicios: List[str]=None, medidas_seguridad: List[str]=None, domicilio: Domicilio=None, horarios: List[Horario]=None):  # noqa: E501
        """Sucursal - a model defined in Swagger

        :param sucursal_id: The sucursal_id of this Sucursal.  # noqa: E501
        :type sucursal_id: int
        :param aforo_actual: The aforo_actual of this Sucursal.  # noqa: E501
        :type aforo_actual: float
        :param aforo_total: The aforo_total of this Sucursal.  # noqa: E501
        :type aforo_total: float
        :param servicios: The servicios of this Sucursal.  # noqa: E501
        :type servicios: List[str]
        :param medidas_seguridad: The medidas_seguridad of this Sucursal.  # noqa: E501
        :type medidas_seguridad: List[str]
        :param domicilio: The domicilio of this Sucursal.  # noqa: E501
        :type domicilio: Domicilio
        :param horarios: The horarios of this Sucursal.  # noqa: E501
        :type horarios: List[Horario]
        """
        self.swagger_types = {
            'sucursal_id': int,
            'aforo_actual': float,
            'aforo_total': float,
            'servicios': List[str],
            'medidas_seguridad': List[str],
            'domicilio': Domicilio,
            'horarios': List[Horario]
        }

        self.attribute_map = {
            'sucursal_id': 'sucursalId',
            'aforo_actual': 'aforoActual',
            'aforo_total': 'aforoTotal',
            'servicios': 'servicios',
            'medidas_seguridad': 'medidasSeguridad',
            'domicilio': 'domicilio',
            'horarios': 'horarios'
        }
        self._sucursal_id = sucursal_id
        self._aforo_actual = aforo_actual
        self._aforo_total = aforo_total
        self._servicios = servicios
        self._medidas_seguridad = medidas_seguridad
        self._domicilio = domicilio
        self._horarios = horarios

    @classmethod
    def from_dict(cls, dikt) -> 'Sucursal':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The sucursal of this Sucursal.  # noqa: E501
        :rtype: Sucursal
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sucursal_id(self) -> int:
        """Gets the sucursal_id of this Sucursal.


        :return: The sucursal_id of this Sucursal.
        :rtype: int
        """
        return self._sucursal_id

    @sucursal_id.setter
    def sucursal_id(self, sucursal_id: int):
        """Sets the sucursal_id of this Sucursal.


        :param sucursal_id: The sucursal_id of this Sucursal.
        :type sucursal_id: int
        """

        self._sucursal_id = sucursal_id

    @property
    def aforo_actual(self) -> float:
        """Gets the aforo_actual of this Sucursal.


        :return: The aforo_actual of this Sucursal.
        :rtype: float
        """
        return self._aforo_actual

    @aforo_actual.setter
    def aforo_actual(self, aforo_actual: float):
        """Sets the aforo_actual of this Sucursal.


        :param aforo_actual: The aforo_actual of this Sucursal.
        :type aforo_actual: float
        """

        self._aforo_actual = aforo_actual

    @property
    def aforo_total(self) -> float:
        """Gets the aforo_total of this Sucursal.


        :return: The aforo_total of this Sucursal.
        :rtype: float
        """
        return self._aforo_total

    @aforo_total.setter
    def aforo_total(self, aforo_total: float):
        """Sets the aforo_total of this Sucursal.


        :param aforo_total: The aforo_total of this Sucursal.
        :type aforo_total: float
        """
        if aforo_total is None:
            raise ValueError("Invalid value for `aforo_total`, must not be `None`")  # noqa: E501

        self._aforo_total = aforo_total

    @property
    def servicios(self) -> List[str]:
        """Gets the servicios of this Sucursal.


        :return: The servicios of this Sucursal.
        :rtype: List[str]
        """
        return self._servicios

    @servicios.setter
    def servicios(self, servicios: List[str]):
        """Sets the servicios of this Sucursal.


        :param servicios: The servicios of this Sucursal.
        :type servicios: List[str]
        """

        self._servicios = servicios

    @property
    def medidas_seguridad(self) -> List[str]:
        """Gets the medidas_seguridad of this Sucursal.


        :return: The medidas_seguridad of this Sucursal.
        :rtype: List[str]
        """
        return self._medidas_seguridad

    @medidas_seguridad.setter
    def medidas_seguridad(self, medidas_seguridad: List[str]):
        """Sets the medidas_seguridad of this Sucursal.


        :param medidas_seguridad: The medidas_seguridad of this Sucursal.
        :type medidas_seguridad: List[str]
        """

        self._medidas_seguridad = medidas_seguridad

    @property
    def domicilio(self) -> Domicilio:
        """Gets the domicilio of this Sucursal.


        :return: The domicilio of this Sucursal.
        :rtype: Domicilio
        """
        return self._domicilio

    @domicilio.setter
    def domicilio(self, domicilio: Domicilio):
        """Sets the domicilio of this Sucursal.


        :param domicilio: The domicilio of this Sucursal.
        :type domicilio: Domicilio
        """

        self._domicilio = domicilio

    @property
    def horarios(self) -> List[Horario]:
        """Gets the horarios of this Sucursal.


        :return: The horarios of this Sucursal.
        :rtype: List[Horario]
        """
        return self._horarios

    @horarios.setter
    def horarios(self, horarios: List[Horario]):
        """Sets the horarios of this Sucursal.


        :param horarios: The horarios of this Sucursal.
        :type horarios: List[Horario]
        """

        self._horarios = horarios
