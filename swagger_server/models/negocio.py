# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.sucursal import Sucursal  # noqa: F401,E501
from swagger_server import util


class Negocio(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, negocio_id: int=None, foto_perfil: str=None, nombre_completo: str=None, correo_electronico: str=None, telefono: str=None, whatsapp: str=None, facebook: str=None, instagram: str=None, tipo_negocio: str=None, sucursales: List[Sucursal]=None):  # noqa: E501
        """Negocio - a model defined in Swagger

        :param negocio_id: The negocio_id of this Negocio.  # noqa: E501
        :type negocio_id: int
        :param foto_perfil: The foto_perfil of this Negocio.  # noqa: E501
        :type foto_perfil: str
        :param nombre_completo: The nombre_completo of this Negocio.  # noqa: E501
        :type nombre_completo: str
        :param correo_electronico: The correo_electronico of this Negocio.  # noqa: E501
        :type correo_electronico: str
        :param telefono: The telefono of this Negocio.  # noqa: E501
        :type telefono: str
        :param whatsapp: The whatsapp of this Negocio.  # noqa: E501
        :type whatsapp: str
        :param facebook: The facebook of this Negocio.  # noqa: E501
        :type facebook: str
        :param instagram: The instagram of this Negocio.  # noqa: E501
        :type instagram: str
        :param tipo_negocio: The tipo_negocio of this Negocio.  # noqa: E501
        :type tipo_negocio: str
        :param sucursales: The sucursales of this Negocio.  # noqa: E501
        :type sucursales: List[Sucursal]
        """
        self.swagger_types = {
            'negocio_id': int,
            'foto_perfil': str,
            'nombre_completo': str,
            'correo_electronico': str,
            'telefono': str,
            'whatsapp': str,
            'facebook': str,
            'instagram': str,
            'tipo_negocio': str,
            'sucursales': List[Sucursal]
        }

        self.attribute_map = {
            'negocio_id': 'negocioId',
            'foto_perfil': 'fotoPerfil',
            'nombre_completo': 'nombreCompleto',
            'correo_electronico': 'correoElectronico',
            'telefono': 'telefono',
            'whatsapp': 'whatsapp',
            'facebook': 'facebook',
            'instagram': 'instagram',
            'tipo_negocio': 'tipoNegocio',
            'sucursales': 'sucursales'
        }
        self._negocio_id = negocio_id
        self._foto_perfil = foto_perfil
        self._nombre_completo = nombre_completo
        self._correo_electronico = correo_electronico
        self._telefono = telefono
        self._whatsapp = whatsapp
        self._facebook = facebook
        self._instagram = instagram
        self._tipo_negocio = tipo_negocio
        self._sucursales = sucursales

    @classmethod
    def from_dict(cls, dikt) -> 'Negocio':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The negocio of this Negocio.  # noqa: E501
        :rtype: Negocio
        """
        return util.deserialize_model(dikt, cls)

    @property
    def negocio_id(self) -> int:
        """Gets the negocio_id of this Negocio.


        :return: The negocio_id of this Negocio.
        :rtype: int
        """
        return self._negocio_id

    @negocio_id.setter
    def negocio_id(self, negocio_id: int):
        """Sets the negocio_id of this Negocio.


        :param negocio_id: The negocio_id of this Negocio.
        :type negocio_id: int
        """

        self._negocio_id = negocio_id

    @property
    def foto_perfil(self) -> str:
        """Gets the foto_perfil of this Negocio.

        Binary data of the media file  # noqa: E501

        :return: The foto_perfil of this Negocio.
        :rtype: str
        """
        return self._foto_perfil

    @foto_perfil.setter
    def foto_perfil(self, foto_perfil: str):
        """Sets the foto_perfil of this Negocio.

        Binary data of the media file  # noqa: E501

        :param foto_perfil: The foto_perfil of this Negocio.
        :type foto_perfil: str
        """

        self._foto_perfil = foto_perfil

    @property
    def nombre_completo(self) -> str:
        """Gets the nombre_completo of this Negocio.

        El **nombre** del negocio registrado  # noqa: E501

        :return: The nombre_completo of this Negocio.
        :rtype: str
        """
        return self._nombre_completo

    @nombre_completo.setter
    def nombre_completo(self, nombre_completo: str):
        """Sets the nombre_completo of this Negocio.

        El **nombre** del negocio registrado  # noqa: E501

        :param nombre_completo: The nombre_completo of this Negocio.
        :type nombre_completo: str
        """
        if nombre_completo is None:
            raise ValueError("Invalid value for `nombre_completo`, must not be `None`")  # noqa: E501

        self._nombre_completo = nombre_completo

    @property
    def correo_electronico(self) -> str:
        """Gets the correo_electronico of this Negocio.

        El **correoElectronico** del negocio que se busca registrar  # noqa: E501

        :return: The correo_electronico of this Negocio.
        :rtype: str
        """
        return self._correo_electronico

    @correo_electronico.setter
    def correo_electronico(self, correo_electronico: str):
        """Sets the correo_electronico of this Negocio.

        El **correoElectronico** del negocio que se busca registrar  # noqa: E501

        :param correo_electronico: The correo_electronico of this Negocio.
        :type correo_electronico: str
        """
        if correo_electronico is None:
            raise ValueError("Invalid value for `correo_electronico`, must not be `None`")  # noqa: E501

        self._correo_electronico = correo_electronico

    @property
    def telefono(self) -> str:
        """Gets the telefono of this Negocio.

        El **telefono** del negocio  # noqa: E501

        :return: The telefono of this Negocio.
        :rtype: str
        """
        return self._telefono

    @telefono.setter
    def telefono(self, telefono: str):
        """Sets the telefono of this Negocio.

        El **telefono** del negocio  # noqa: E501

        :param telefono: The telefono of this Negocio.
        :type telefono: str
        """
        if telefono is None:
            raise ValueError("Invalid value for `telefono`, must not be `None`")  # noqa: E501

        self._telefono = telefono

    @property
    def whatsapp(self) -> str:
        """Gets the whatsapp of this Negocio.

        El **whatsapp** del negocio  # noqa: E501

        :return: The whatsapp of this Negocio.
        :rtype: str
        """
        return self._whatsapp

    @whatsapp.setter
    def whatsapp(self, whatsapp: str):
        """Sets the whatsapp of this Negocio.

        El **whatsapp** del negocio  # noqa: E501

        :param whatsapp: The whatsapp of this Negocio.
        :type whatsapp: str
        """

        self._whatsapp = whatsapp

    @property
    def facebook(self) -> str:
        """Gets the facebook of this Negocio.

        El **facebook** del negocio  # noqa: E501

        :return: The facebook of this Negocio.
        :rtype: str
        """
        return self._facebook

    @facebook.setter
    def facebook(self, facebook: str):
        """Sets the facebook of this Negocio.

        El **facebook** del negocio  # noqa: E501

        :param facebook: The facebook of this Negocio.
        :type facebook: str
        """

        self._facebook = facebook

    @property
    def instagram(self) -> str:
        """Gets the instagram of this Negocio.

        El **instagram** del negocio  # noqa: E501

        :return: The instagram of this Negocio.
        :rtype: str
        """
        return self._instagram

    @instagram.setter
    def instagram(self, instagram: str):
        """Sets the instagram of this Negocio.

        El **instagram** del negocio  # noqa: E501

        :param instagram: The instagram of this Negocio.
        :type instagram: str
        """

        self._instagram = instagram

    @property
    def tipo_negocio(self) -> str:
        """Gets the tipo_negocio of this Negocio.


        :return: The tipo_negocio of this Negocio.
        :rtype: str
        """
        return self._tipo_negocio

    @tipo_negocio.setter
    def tipo_negocio(self, tipo_negocio: str):
        """Sets the tipo_negocio of this Negocio.


        :param tipo_negocio: The tipo_negocio of this Negocio.
        :type tipo_negocio: str
        """

        self._tipo_negocio = tipo_negocio

    @property
    def sucursales(self) -> List[Sucursal]:
        """Gets the sucursales of this Negocio.


        :return: The sucursales of this Negocio.
        :rtype: List[Sucursal]
        """
        return self._sucursales

    @sucursales.setter
    def sucursales(self, sucursales: List[Sucursal]):
        """Sets the sucursales of this Negocio.


        :param sucursales: The sucursales of this Negocio.
        :type sucursales: List[Sucursal]
        """

        self._sucursales = sucursales
