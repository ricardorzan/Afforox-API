# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.error_detail import ErrorDetail  # noqa: F401,E501
from swagger_server import util


class Error(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, name: str=None, detail: List[ErrorDetail]=None, debug_id: str=None, message: str=None):  # noqa: E501
        """Error - a model defined in Swagger

        :param name: The name of this Error.  # noqa: E501
        :type name: str
        :param detail: The detail of this Error.  # noqa: E501
        :type detail: List[ErrorDetail]
        :param debug_id: The debug_id of this Error.  # noqa: E501
        :type debug_id: str
        :param message: The message of this Error.  # noqa: E501
        :type message: str
        """
        self.swagger_types = {
            'name': str,
            'detail': List[ErrorDetail],
            'debug_id': str,
            'message': str
        }

        self.attribute_map = {
            'name': 'name',
            'detail': 'detail',
            'debug_id': 'debugId',
            'message': 'message'
        }
        self._name = name
        self._detail = detail
        self._debug_id = debug_id
        self._message = message

    @classmethod
    def from_dict(cls, dikt) -> 'Error':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The error of this Error.  # noqa: E501
        :rtype: Error
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this Error.

        Un nombre único y legible por humanos para el error  # noqa: E501

        :return: The name of this Error.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Error.

        Un nombre único y legible por humanos para el error  # noqa: E501

        :param name: The name of this Error.
        :type name: str
        """

        self._name = name

    @property
    def detail(self) -> List[ErrorDetail]:
        """Gets the detail of this Error.

        una matriz que contiene instancias individuales del error con detalles como los siguientes. Este campo es obligatorio para los errores del lado del cliente (4xx)  # noqa: E501

        :return: The detail of this Error.
        :rtype: List[ErrorDetail]
        """
        return self._detail

    @detail.setter
    def detail(self, detail: List[ErrorDetail]):
        """Sets the detail of this Error.

        una matriz que contiene instancias individuales del error con detalles como los siguientes. Este campo es obligatorio para los errores del lado del cliente (4xx)  # noqa: E501

        :param detail: The detail of this Error.
        :type detail: List[ErrorDetail]
        """

        self._detail = detail

    @property
    def debug_id(self) -> str:
        """Gets the debug_id of this Error.

        Un identificador de error único generado en el lado del servidor y registrado con fines de correlación.  # noqa: E501

        :return: The debug_id of this Error.
        :rtype: str
        """
        return self._debug_id

    @debug_id.setter
    def debug_id(self, debug_id: str):
        """Sets the debug_id of this Error.

        Un identificador de error único generado en el lado del servidor y registrado con fines de correlación.  # noqa: E501

        :param debug_id: The debug_id of this Error.
        :type debug_id: str
        """

        self._debug_id = debug_id

    @property
    def message(self) -> str:
        """Gets the message of this Error.

        Un mensaje legible por humanos que describe el error. Este mensaje DEBE ser una descripción del problema, NO una sugerencia sobre cómo solucionarlo.  # noqa: E501

        :return: The message of this Error.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this Error.

        Un mensaje legible por humanos que describe el error. Este mensaje DEBE ser una descripción del problema, NO una sugerencia sobre cómo solucionarlo.  # noqa: E501

        :param message: The message of this Error.
        :type message: str
        """

        self._message = message
